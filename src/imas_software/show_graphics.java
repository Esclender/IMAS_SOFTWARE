package imas_software;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.List;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Stack;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Esclender
 */
public class show_graphics extends javax.swing.JPanel {

    /**
     * Creates new form show_graphics
     */
    public show_graphics(Stack<Stack> data) {
        initComponents();
        Stack<Stack> cantidad = new Stack();
        Stack columnas = new Stack();
        
        for(Stack<String> d: data){
            Stack newStack = new Stack();
            Boolean mismo = false; 
            
            for(Stack j: cantidad){
                if(j.get(0) == d.get(0)){
                    mismo = true;
                    break;
                }
            }
            
            if(!mismo){
                newStack.push(d.get(0));
                cantidad.push(newStack);
            }
           
        }
        
        /*Busca dentro de data los arrays que representan la C1 Y C2, Une los arrays que tengan el el mismo INDEX 0  */ 
        for(Stack d: data){
            for(Stack c:cantidad){
                if(c.get(0) == d.get(0)){
                       c.push(d.get(1));
                }
            }
        }
        
        
        
        for(int i = 0; i < cantidad.size(); i++){
            c2_attributes nuevo = new c2_attributes();
            Stack d = cantidad.get(i);
            nuevo.name = (String) d.get(0);
            
            for(int j = 1; j < d.size(); j++){
                nuevo.setAmount((String) d.get(j));
            }
            
            columnas.push(nuevo);
        }

        System.out.println("Souter" + columnas);
        
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        
        dataset.addValue(4, "Ropa de verano", "Marco");

        HacerGrafico(columnas);
        
    }
    
    public void HacerGrafico(Stack<c2_attributes> columns){
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        
        
        for(c2_attributes c: columns){
            
            for(Stack i: c.amounts){
                
                dataset.addValue(
                    Integer.parseInt(i.get(1).toString()),
                   i.get(0).toString() ,
                 c.name
                );
                
            }
            
        }

        JFreeChart chart = ChartFactory.createBarChart(
                "Mj Store",    // Chart title
                "Leyenda",             // X-axis label
                "Cantidad",                // Y-axis label
                dataset,                // Dataset
                PlotOrientation.VERTICAL,// Plot orientation
                true,                   // Show legend
                true,                   // Use tooltips
                false                   // Generate URLs
        );
        
        // Create a panel to display the chart
        ChartPanel chartPanel = new ChartPanel(chart);
        chartPanel.setSize(490, 260);
        
        graphics_area.removeAll();
        graphics_area.add(chartPanel);
        graphics_area.revalidate();
        graphics_area.repaint();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        graphics_area = new javax.swing.JPanel();
        graphic_options = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        javax.swing.GroupLayout graphics_areaLayout = new javax.swing.GroupLayout(graphics_area);
        graphics_area.setLayout(graphics_areaLayout);
        graphics_areaLayout.setHorizontalGroup(
            graphics_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );
        graphics_areaLayout.setVerticalGroup(
            graphics_areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        jPanel1.add(graphics_area, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 50, 490, 260));

        jPanel1.add(graphic_options, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> graphic_options;
    private javax.swing.JPanel graphics_area;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
